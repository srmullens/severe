name: Catch

on:
  push:
    paths:
    - '**/catch.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
    # This should cash the environment so we don't 
    # have to spend 3 minutes building a new one each time.
    - name: Cache conda
      uses: actions/cache@v1
      env:
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('**/requirements.txt') }}
    #    restore-keys: ${{ runner.os }}-pip-

    # Checkout allows us to use the files in this repository.
    - uses: actions/checkout@v2
    - name: Setup Miniconda
      # This sets up conda... 
      # ...auto-creates a test environment (super annoying)...
      # ... and installs the python version and dependencies there.
      #uses: goanpeca/setup-miniconda@check-cache
      uses: goanpeca/setup-miniconda@v1
      with:
        auto-update-conda: true
        miniconda-version: latest
        activate-environment: test
        python-version: 3.7
        environment-file: requirements.txt
        use-only-tar-bz2: true
      
    - name: Install dependencies
      run: |
        # Change source to use conda commands
        source /usr/share/miniconda3/etc/profile.d/conda.sh
        # Change environment to where all the dependencies are installed anyway.
        conda activate test
        # This needs to be installed via apt-get...
        sudo apt-get install libproj-dev
        # ... but most everything else can come via conda-forge.
        conda install -c conda-forge wheel numpy geos pandas geopandas requests pyshp matplotlib cartopy twython
        # One more.
        pip install timezonefinder
        
    - name: Run code
      id: run_code
      shell: bash
      env:
        consumer_key: ${{ secrets.TWITTER_API_KEY }}
        consumer_secret: ${{ secrets.TWITTER_API_SECRET_KEY }}
        access_token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        access_token_secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
      run: |
        # Change source to use conda commands
        source /usr/share/miniconda3/etc/profile.d/conda.sh
        # Change environment to where all the dependencies were installed.
        conda activate test
        # Run the code!
        python3 catch.py
        
    # We created some files. But we need to commit them to the repository.
    #- name: Commit files
    #  run: |
    #      git config --local user.email ${{ secrets.SECRET_MAIL_FROM }}
    #      git config --local user.name ${{ secrets.SECRET_GITHUB_USERNAME }}
    #      git add .        # Adds file to commit
    #      git add --all    # Adds only the file, not the folder where Python & conda was set up.
    #      # git commit -m "Add changes"
    #      git diff --quiet && git diff --staged --quiet || git commit -am 'Add changes'
          
    # Now push committed changes to the repo.
    #- name: Push changes
    #  uses: ad-m/github-push-action@master
    #  with:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
